#!/usr/bin/env node
import{Command as to}from"commander";import{Command as K}from"commander";import{existsSync as O}from"fs";import Q from"ora";import $ from"path";import X from"chalk";import Z from"prompts";import{z as y}from"zod";import _ from"async-retry";import c from"chalk";import V from"fs";import u from"path";import{createWriteStream as z,promises as v}from"fs";import F from"got";import{tmpdir as G}from"os";import{join as W}from"path";import{Stream as q}from"stream";import R from"tar";import{promisify as B}from"util";var J=B(q.pipeline);async function I(e){let o=W(G(),`next.js-cna-example.temp-${Date.now()}`);return await J(F.stream(e),z(o)),o}async function j(e,{username:o,name:r,branch:t,filePath:n}){let i=await I(`https://codeload.github.com/${o}/${r}/tar.gz/${t}`);await R.x({file:i,cwd:e,strip:n?n.split("/").length+1:1,filter:s=>s.startsWith(`${r}-${t.replace(/\//g,"-")}${n?`/${n}/`:"/"}`)}),await v.unlink(i)}async function k(e,o){if(o==="__internal-testing-retry")throw new Error("This is an internal example for testing the CLI.");let r=await I("https://codeload.github.com/vercel/next.js/tar.gz/canary");await R.x({file:r,cwd:e,strip:2+o.split("/").length,filter:t=>t.includes(`next.js-canary/examples/${o}/`)}),await v.unlink(r)}import P from"got";async function w(e){return(await P.head(e).catch(r=>r)).statusCode===200}async function E(e,o){let[,r,t,n,i,...s]=e.pathname.split("/"),p=o?o.replace(/^\//,""):s.join("/");if(n===void 0||n===""&&i===void 0){let f=await P(`https://api.github.com/repos/${r}/${t}`).catch(l=>l);if(f.statusCode!==200)return;let a=JSON.parse(f.body);return{username:r,name:t,branch:a.default_branch,filePath:p}}let d=o?`${i}/${s.join("/")}`.replace(new RegExp(`/${p}|/$`),""):i;if(r&&t&&d&&n==="tree")return{username:r,name:t,branch:d,filePath:p}}function C({username:e,name:o,branch:r,filePath:t}){let n=`https://api.github.com/repos/${e}/${o}/contents`,i=`${t?`/${t}`:""}/package.json`;return w(n+i+`?ref=${r}`)}function L(e){try{let o=new URL(e);return w(o.href)}catch{return w(`https://api.github.com/repos/vercel/next.js/contents/examples/${encodeURIComponent(e)}`)}}import T from"chalk";import Y from"cross-spawn";import yo from"ora";async function U(e,o){let r=["install"];return o||(console.log(T.yellow(`You appear to be offline.
Falling back to the local cache.`)),r.push("--offline")),new Promise((t,n)=>{Y(e,r,{stdio:"inherit",env:{...process.env,ADBLOCK:"1",NODE_ENV:"development",DISABLE_OPENCOLLECTIVE:"1"}}).on("close",s=>{if(s!==0){n({command:`${e} ${r.join(" ")}`});return}t()})})}import x from"fs";async function A(e){try{return await x.promises.access(e,(x.constants||x).W_OK),!0}catch{return!1}}import H from"fs";function g(e,o={recursive:!0}){return H.promises.mkdir(e,o)}async function D({appPath:e,example:o}){let r;if(o){let a;try{a=new URL(o)}catch(l){l.code!=="ERR_INVALID_URL"&&(console.error(l),process.exit(1))}a?(a.origin!=="https://github.com"&&(console.error(`URL inv\xE1lida: ${c.red(`"${o}"`)}. Apenas reposit\xF3rios do GitHui s\xE3o permitidos. Por favor, use uma URL de um reposit\xF3rio do GitHub e tente novamente.`),process.exit(1)),r=await E(a),r||(console.error(`Pasta inv\xE1lida nessa URL do GitHub: ${c.red(`"${o}"`)}. Por favor, ajuste a URL e tente novamente.`),process.exit(1)),await C(r)||(console.error(`N\xE3o podemos encontrar a localiza\xE7\xE3o do reposit\xF3rio ${c.red(`"${o}"`)}. Por favor, verifique se o reposit\xF3rio existe e tente novamente.`),process.exit(1))):o!=="__internal-testing-retry"&&(await L(o)||(console.error(`Could not locate an example named ${c.red(`"${o}"`)}. It could be due to the following:
`,`1. Your spelling of example ${c.red(`"${o}"`)} might be incorrect.
`,"2. You might not be connected to the internet or you are behind a proxy."),process.exit(1)))}let t=u.resolve(e);await A(u.dirname(t))||(console.error("A aplica\xE7\xE3o n\xE3o pode ser escrita, por favor verifique as permiss\xF5es da pasta e tente novamente."),process.exit(1));let n=u.basename(t);await g(t);let i="yarn",s=process.cwd();console.log(`Criando um novo projeto Gseller em ${c.green(t)}.`),console.log(),process.chdir(t);let p=u.join(t,"package.json"),d=!1;if(o){try{if(r){let a=r;console.log(`Baixando arquivos do reposit\xF3rio ${c.cyan(o)}. Isso pode demorar um pouco.`),console.log(),await _(()=>j(t,a),{retries:3})}else console.log(`Baixando arquivos do reposit\xF3rio ${c.cyan(o)}. Isso pode demorar um pouco.`),console.log(),await _(()=>k(t,o),{retries:3})}catch{}d=V.existsSync(p),d&&(console.log("Installing packages. This might take a couple of minutes."),console.log(),await U("yarn",!0),console.log())}let f;u.join(s,n)===e?f=n:f=e,console.log(`${c.green("Sucesso!")} Criando ${n} em ${e}`)}import h from"chalk";var m={error(...e){console.log(h.red(...e))},warn(...e){console.log(h.yellow(...e))},info(...e){console.log(h.cyan(...e))},success(...e){console.log(h.green(...e))},break(){console.log("")}};var M=y.object({cwd:y.string(),yes:y.boolean()}),N="",S=new K().command("init").description("Iniciar projeto boilerplate Gseller").option("-y, --yes","pular a confirma\xE7\xE3o de cria\xE7\xE3o do projeto",!1).option("-c, --cwd <cwd>","Diret\xF3rio de trabalho. O padr\xE3o \xE9 o diret\xF3rio atual.",process.cwd()).action(async e=>{let o="https://github.com/mateusp7/grv";try{let r=M.parse(e),t=$.resolve(r.cwd);O(t)||(m.error(`O caminho ${t} n\xE3o existe. Por favor, tente novamente.`),process.exit(1));let n=await oo(t);await eo(n,o),m.info(""),m.info("Inicializa\xE7\xE3o do projeto realizada com sucesso."),m.info("")}catch{}});async function oo(e){let o=p=>X.cyan(p),r=await Z([{type:"text",name:"path",message:"Qual o nome do projeto?"}]);typeof r.path=="string"&&(N=r.path.trim());let t=$.resolve(N),n=$.basename(t);m.info(""),O(t)&&(m.warn(`J\xE1 existe uma pasta com o nome de ${o(n)}`),process.exit(1));let s=Q(`Criando pasta ${o(n)} do projeto.`).start();return await g(t),s.succeed(),t}async function eo(e,o){try{await D({appPath:e,example:o})}catch{}}var b=new to;async function ro(){b.name("gseller").description("Criar um template teste").version("1.0.0","-v, --version","display the version number"),b.addCommand(S),b.parse()}ro();
//# sourceMappingURL=index.js.map