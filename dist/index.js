#!/usr/bin/env node
import{Command as K}from"commander";import R from"chalk";import{Command as L}from"commander";import{existsSync as j}from"fs";import h from"path";import E from"prompts";import{z as c}from"zod";import p from"chalk";var i={error(...o){console.log(p.red(...o))},warn(...o){console.log(p.yellow(...o))},info(...o){console.log(p.cyan(...o))},success(...o){console.log(p.green(...o))},break(){console.log("")}};var P=[{title:"Login",value:"login"},{title:"Administradores",value:"administrators"}],A=c.object({components:c.array(c.string()).optional(),yes:c.boolean(),cwd:c.string()}),w=new L().name("add").description("Adicionar uma funcionalidade/componente para o projeto Gseller").argument("[components...]","componente que ir\xE1 ser adicionado").option("-y, --yes","pular a confirma\xE7\xE3o de cria\xE7\xE3o do projeto",!0).option("-c, --cwd <cwd>","Diret\xF3rio de trabalho. O padr\xE3o \xE9 o diret\xF3rio atual.",process.cwd()).action(async(o,e)=>{console.log("opts",e),console.log("components",o);try{let t=A.parse({components:o,...e}),r=h.resolve(t.cwd);j(r)||(i.error(`O caminho ${r} n\xE3o existe. Por favor, tente novamente.`),process.exit(1)),await S(t)}catch(t){console.log("error",t)}});async function S(o){let e=h.resolve(o.cwd),t=s=>R.cyan(s),r=o.components;if(!o.components?.length){let{components:s}=await E({type:"multiselect",name:"components",message:"Qual componente voc\xEA gostaria de adicionar?",hint:"ESPA\xC7O para selecionar. A para marcar todos. Enter para enviar",instructions:!1,choices:P.map(a=>({title:a.title,value:a.value,selected:o.components?.includes(a.value)}))});r=s}r?.length||(i.warn("Nenhum componente selecionado. Saindo."),process.exit(0))}import{Command as z}from"commander";import{existsSync as G,promises as W}from"fs";import B from"ora";import g from"path";import H from"chalk";import J from"prompts";import{z as d}from"zod";import No from"async-retry";import qo from"chalk";import po from"got";import{Stream as k}from"stream";import fo from"tar";import{promisify as U}from"util";var uo=U(k.pipeline);import xo from"got";import bo from"chalk";import $o from"cross-spawn";import Ro from"ora";import{cosmiconfig as _}from"cosmiconfig";import f from"path";import{loadConfig as T}from"tsconfig-paths/lib";import{z as n}from"zod";import{createMatchPath as D}from"tsconfig-paths/lib";async function m(o,e){return D(e.absoluteBaseUrl,e.paths)(o,void 0,()=>!0,[".ts",".tsx"])}var x="@/components",y="@/lib/utils",v="src/app/globals.css",b="tailwind.config.js",C="src/app/graphql",F=_("components",{searchPlaces:["components.json"]}),l=n.object({tsx:n.coerce.boolean().default(!0),graphql:n.string(),tailwind:n.object({config:n.string(),css:n.string()}),aliases:n.object({components:n.string(),utils:n.string()})}).strict(),N=l.extend({resolvedPaths:n.object({tailwindConfig:n.string(),tailwindCss:n.string(),utils:n.string(),components:n.string()})});async function $(o){let e=await q(o);return e?await O(o,e):null}async function O(o,e){let t=T(o);if(t.resultType==="failed")throw new Error(`Failed to load ${e.tsx?"tsconfig":"jsconfig"}.json. ${t.message??""}`.trim());return N.parse({...e,resolvedPaths:{graphql:f.resolve(o,e.graphql),tailwindConfig:f.resolve(o,e.tailwind.config),tailwindCss:f.resolve(o,e.tailwind.css),utils:await m(e.aliases.utils,t),components:await m(e.aliases.components,t)}})}async function q(o){try{let e=await F.search(o);return console.log("configResult",e),e?l.parse(e.config):null}catch{throw new Error(`Invalid configuration found in ${o}/components.json.`)}}var Q=d.object({cwd:d.string(),yes:d.boolean()}),I=new z().command("init").description("Iniciar projeto boilerplate Gseller").option("-y, --yes","pular a confirma\xE7\xE3o de cria\xE7\xE3o do projeto",!1).option("-c, --cwd <cwd>","Diret\xF3rio de trabalho. O padr\xE3o \xE9 o diret\xF3rio atual.",process.cwd()).action(async o=>{let e="https://github.com/mateusp7/grv";try{let t=Q.parse(o),r=g.resolve(t.cwd);G(r)||(i.error(`O caminho ${r} n\xE3o existe. Por favor, tente novamente.`),process.exit(1));let s=await $(r),a=await Y(s);i.info(""),i.info("Inicializa\xE7\xE3o do projeto realizada com sucesso."),i.info("")}catch{}});async function Y(o=null){let e=a=>H.cyan(a),t=await J([{type:"text",name:"graphql",message:`Aonde est\xE1 localizado a pasta ${e("graphql")}?`,initial:o?.graphql??C},{type:"text",name:"tailwindConfig",message:`Aonde est\xE1 localizado a pasta ${e("tailwind.config.js")}?`,initial:o?.tailwind.config??b},{type:"text",name:"tailwindCss",message:`Aonde est\xE1 localizado o arquivo ${e("global CSS")}?`,initial:o?.tailwind.css??v},{type:"text",name:"components",message:`Configure o alias de importa\xE7\xE3o para ${e("components")}:`,initial:o?.aliases.components??x},{type:"text",name:"utils",message:`Configure o alias de importa\xE7\xE3o para ${e("utils")}:`,initial:o?.aliases.utils??y}]),r=l.parse({tsx:!0,graphql:t.graphql,tailwind:{config:t.tailwindConfig,css:t.tailwindCss},aliases:{utils:t.utils,components:t.components}}),s=g.resolve();return i.info(""),V(s,r),s}async function V(o,e){i.info("");let t=B("Criando arquivo gseller.json...").start(),r=g.resolve(o,"gseller.json");await W.writeFile(r,JSON.stringify(e,null,2),"utf-8"),t.succeed()}var u=new K;async function M(){u.name("gseller").description("Criar um template teste").version("1.0.0","-v, --version","display the version number"),u.addCommand(I).addCommand(w),u.parse()}M();
//# sourceMappingURL=index.js.map