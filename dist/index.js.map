{"version":3,"sources":["../src/index.ts","../src/commands/init.ts","../src/helpers/constants.ts","../src/helpers/get-config.ts","../src/helpers/resolve-import.ts","../src/helpers/get-package-manager.ts","../src/helpers/logger.ts","../src/helpers/handler-error.ts","../src/helpers/is-writeable.ts","../src/helpers/prompt-state.ts","../src/commands/start.ts","../src/helpers/create-app.ts","../src/helpers/download.ts","../src/helpers/example.ts","../src/helpers/install.ts","../src/helpers/make-dir.ts"],"sourcesContent":["#!/usr/bin/env node\nimport { Command } from 'commander'\nimport { init } from './commands/init'\nimport { start } from './commands/start'\n\nconst program = new Command()\nasync function main() {\n  program\n    .name('gseller')\n    .description('Criar um template teste')\n    .version('1.0.0', '-v, --version', 'display the version number')\n\n  program.addCommand(start).addCommand(init)\n  program.parse()\n}\n\nmain()\n","import { Command } from 'commander'\nimport { existsSync, promises as fs } from 'fs'\nimport ora from 'ora'\nimport path from 'path'\n\nimport chalk from 'chalk'\nimport { execa } from 'execa'\nimport template from 'lodash.template'\nimport prompts from 'prompts'\nimport { z } from 'zod'\nimport {\n  DEFAULT_COMPONENTS,\n  DEFAULT_GRAPHQL,\n  DEFAULT_TAILWIND_CONFIG,\n  DEFAULT_TAILWIND_CSS,\n  DEFAULT_UTILS,\n  PROJECT_DEPENDENCIES,\n  TAILWIND_CONFIG_TS,\n  UTILS,\n} from '../helpers/constants'\nimport {\n  Config,\n  getConfig,\n  rawConfigSchema,\n  resolveConfigPaths,\n} from '../helpers/get-config'\nimport { getPackageManager } from '../helpers/get-package-manager'\nimport { handleError } from '../helpers/handler-error'\nimport { isWriteable } from '../helpers/is-writeable'\nimport { logger } from '../helpers/logger'\nimport { onPromptState } from '../helpers/prompt-state'\n\nconst initOptionsSchema = z.object({\n  cwd: z.string(),\n  yes: z.boolean(),\n})\n\nexport const init = new Command()\n  .command('init')\n  .description('Iniciar as configurações para o projeto Gseller')\n  .option('-y, --yes', 'Pular a confirmação de criação do projeto', false)\n  .option(\n    '-c, --cwd <cwd>',\n    'Diretório de trabalho. O padrão é o diretório atual.',\n    process.cwd()\n  )\n  .action(async (opts) => {\n    try {\n      const options = initOptionsSchema.parse(opts)\n      const cwd = path.resolve(options.cwd)\n\n      if (!existsSync(cwd)) {\n        logger.error(`O caminho ${cwd} não existe. Por favor, tente novamente.`)\n        process.exit(1)\n      }\n\n      const existingConfig = await getConfig(cwd)\n      const promptConfig = await promptForConfig(existingConfig)\n\n      await runInit(cwd, promptConfig)\n\n      logger.info('')\n      logger.info(`Inicialização do projeto realizada com sucesso.`)\n      logger.info('')\n    } catch (err) {\n      handleError(err)\n    }\n  })\n\nexport async function promptForConfig(defaultConfig: Config | null = null) {\n  const highlight = (text: string) => chalk.cyan(text)\n\n  const options = await prompts([\n    {\n      onState: onPromptState,\n      type: 'text',\n      name: 'graphql',\n      message: `Aonde está localizado a pasta ${highlight('graphql')}?`,\n      initial: defaultConfig?.graphql ?? DEFAULT_GRAPHQL,\n    },\n    {\n      onState: onPromptState,\n      type: 'text',\n      name: 'tailwindConfig',\n      message: `Aonde está localizado a pasta ${highlight(\n        'tailwind.config.js'\n      )}?`,\n      initial: defaultConfig?.tailwind.config ?? DEFAULT_TAILWIND_CONFIG,\n    },\n    {\n      onState: onPromptState,\n      type: 'text',\n      name: 'tailwindCss',\n      message: `Aonde está localizado o arquivo ${highlight('global CSS')}?`,\n      initial: defaultConfig?.tailwind.css ?? DEFAULT_TAILWIND_CSS,\n    },\n    {\n      onState: onPromptState,\n      type: 'text',\n      name: 'components',\n      message: `Configure o alias de importação para ${highlight(\n        'components'\n      )}:`,\n      initial: defaultConfig?.aliases['components'] ?? DEFAULT_COMPONENTS,\n    },\n    {\n      onState: onPromptState,\n      type: 'text',\n      name: 'utils',\n      message: `Configure o alias de importação para ${highlight('utils')}:`,\n      initial: defaultConfig?.aliases['utils'] ?? DEFAULT_UTILS,\n    },\n  ])\n\n  const config = rawConfigSchema.parse({\n    tsx: true,\n    graphql: options.graphql,\n    tailwind: {\n      config: options.tailwindConfig,\n      css: options.tailwindCss,\n    },\n    aliases: {\n      utils: options.utils,\n      components: options.components,\n    },\n  })\n\n  const resolvedProjectPath = path.resolve()\n  logger.info('')\n\n  return createGsellerJson(resolvedProjectPath, config)\n}\n\nexport async function createGsellerJson(\n  cwd: string,\n  config: z.infer<typeof rawConfigSchema>\n) {\n  logger.info('')\n  const spinner = ora(`Criando arquivo ${chalk.blue('gseller.json')}`).start()\n\n  const isWritable = await isWriteable(cwd)\n\n  if (!isWritable) return undefined\n\n  try {\n    const targetPath = path.resolve(cwd, 'gseller.json')\n    await fs.writeFile(targetPath, JSON.stringify(config, null, 2), 'utf-8')\n    spinner.succeed()\n    logger.info('')\n\n    return await resolveConfigPaths(cwd, config)\n  } catch (err) {\n    logger.error(err)\n  }\n}\n\nexport async function runInit(cwd: string, config: Config | undefined) {\n  if (!config) return\n\n  for (const [key, resolvedPath] of Object.entries(config.resolvedPaths)) {\n    let dirname = path.extname(resolvedPath)\n      ? path.dirname(resolvedPath)\n      : resolvedPath\n\n    if (key === 'utils' && resolvedPath.endsWith('/utils')) {\n      dirname = dirname.replace(/\\/utils$/, '')\n    }\n\n    if (!existsSync(dirname)) {\n      await fs.mkdir(dirname, { recursive: true })\n    }\n  }\n\n  const tailwindConfigTemplate = TAILWIND_CONFIG_TS\n\n  const spinnerWriteTailwindConfig = ora(\n    `Criando arquivo ${chalk.blue('tailwind.config.ts')}`\n  )?.start()\n  await fs.writeFile(\n    config.resolvedPaths.tailwindConfig,\n    template(tailwindConfigTemplate)({\n      extension: 'ts',\n      prefix: '',\n    }),\n    'utf8'\n  )\n  spinnerWriteTailwindConfig.succeed()\n  logger.info('')\n\n  const spinnerWriteUtils = ora(\n    `Criando arquivo ${chalk.blue('utils')}`\n  )?.start()\n  await fs.writeFile(`${config.resolvedPaths.utils}.ts`, UTILS, 'utf8')\n  spinnerWriteUtils.succeed()\n  logger.info('')\n\n  const dependenciesSpinner = ora(`Instalando dependências...`)?.start()\n  const packageManager = await getPackageManager(cwd)\n\n  const deps = [...PROJECT_DEPENDENCIES]\n\n  logger.info('')\n  logger.info('')\n  logger.info('Dependências')\n  logger.info('')\n  deps.forEach((dep) => {\n    logger.info(`- ${dep}`)\n  })\n  logger.info('')\n\n  await execa(\n    packageManager,\n    [packageManager === 'npm' ? 'install' : 'add', ...deps],\n    {\n      cwd,\n    }\n  )\n\n  dependenciesSpinner?.succeed()\n}\n","export const DEFAULT_COMPONENTS = '@/components'\nexport const DEFAULT_UTILS = '@/lib/utils'\nexport const DEFAULT_TAILWIND_CSS = 'src/app/globals.css'\nexport const DEFAULT_TAILWIND_CONFIG = 'tailwind.config.ts'\nexport const DEFAULT_GRAPHQL = 'src/app/graphql'\nexport const PROJECT_DEPENDENCIES = [\n  'tailwindcss-animate',\n  'class-variance-authority',\n  'clsx',\n  'tailwind-merge',\n  'lucide',\n]\n\nexport const UTILS = `import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n`\n\nexport const TAILWIND_CONFIG_TS = `import type { Config } from 'tailwindcss'\n\nconst config = {\n  darkMode: ['class'],\n  content: [\n    './pages/**/*.{ts,tsx}',\n    './components/**/*.{ts,tsx}',\n    './app/**/*.{ts,tsx}',\n    './src/**/*.{ts,tsx}',\n  ],\n  prefix: '',\n  theme: {\n    container: {\n      center: true,\n      padding: '2rem',\n      screens: {\n        '2xl': '1400px',\n      },\n    },\n    extend: {\n      colors: {\n        primary: '#5570F1',\n        globalBlue: '#223463',\n        yellow: '#9EBE23',\n        secondary: '#FEF5EA',\n        'gray-children': '#faf0ff',\n        black: '#1C1D22',\n        'black-80': '#33343A',\n        'black-60': '#45464E',\n        'black-50': '#53545C',\n        'black-30': '#8B8D97',\n        'black-20': '#A6A8B1',\n        'black-10': '#BEC0CA',\n        alert: '#FF9B1C',\n        success: '#519C66',\n        failure: '#CC5F5F',\n        gray: '#E1E2E9',\n        background: '#f4f5fa',\n        'neutral-1': '#1F2937',\n        'neutral-2': '#374151',\n        'neutral-3': '#4A5462',\n        'primary-dark': '#0F172A',\n        'secondary-dark': '#1E293B',\n        // light mode\n        tremor: {\n          brand: {\n            faint: '#eff6ff', // blue-50\n            muted: '#bfdbfe', // blue-200\n            subtle: '#60a5fa', // blue-400\n            DEFAULT: '#3b82f6', // blue-500\n            emphasis: '#1d4ed8', // blue-700\n            inverted: '#ffffff', // white\n          },\n          background: {\n            muted: '#f9fafb', // gray-50\n            subtle: '#f3f4f6', // gray-100\n            DEFAULT: '#ffffff', // white\n            emphasis: '#374151', // gray-700\n          },\n          border: {\n            DEFAULT: '#e5e7eb', // gray-200\n          },\n          ring: {\n            DEFAULT: '#e5e7eb', // gray-200\n          },\n          content: {\n            subtle: '#9ca3af', // gray-400\n            DEFAULT: '#6b7280', // gray-500\n            emphasis: '#374151', // gray-700\n            strong: '#111827', // gray-900\n            inverted: '#ffffff', // white\n          },\n        },\n        // dark mode\n        'dark-tremor': {\n          brand: {\n            faint: '#0B1229', // custom\n            muted: '#172554', // blue-950\n            subtle: '#1e40af', // blue-800\n            DEFAULT: '#3b82f6', // blue-500\n            emphasis: '#60a5fa', // blue-400\n            inverted: '#030712', // gray-950\n          },\n          background: {\n            muted: '#131A2B', // custom\n            subtle: '#1f2937', // gray-800\n            DEFAULT: '#111827', // gray-900\n            emphasis: '#d1d5db', // gray-300\n          },\n          border: {\n            DEFAULT: '#1f2937', // gray-800\n          },\n          ring: {\n            DEFAULT: '#1f2937', // gray-800\n          },\n          content: {\n            subtle: '#4b5563', // gray-600\n            DEFAULT: '#6b7280', // gray-600\n            emphasis: '#e5e7eb', // gray-200\n            strong: '#f9fafb', // gray-50\n            inverted: '#000000', // black\n          },\n        },\n      },\n      boxShadow: {\n        // light\n        'tremor-input': '0 1px 2px 0 rgb(0 0 0 / 0.05)',\n        'tremor-card':\n          '0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)',\n        'tremor-dropdown':\n          '0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)',\n        // dark\n        'dark-tremor-input': '0 1px 2px 0 rgb(0 0 0 / 0.05)',\n        'dark-tremor-card':\n          '0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)',\n        'dark-tremor-dropdown':\n          '0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)',\n      },\n      keyframes: {\n        'accordion-down': {\n          from: { height: '0' },\n          to: { height: 'var(--radix-accordion-content-height)' },\n        },\n        'accordion-up': {\n          from: { height: 'var(--radix-accordion-content-height)' },\n          to: { height: '0' },\n        },\n      },\n      animation: {\n        'accordion-down': 'accordion-down 0.2s ease-out',\n        'accordion-up': 'accordion-up 0.2s ease-out',\n      },\n    },\n  },\n  plugins: [require('tailwindcss-animate')],\n} satisfies Config\n\nexport default config\n`\n","import { cosmiconfig } from 'cosmiconfig'\nimport path from 'path'\nimport { loadConfig } from 'tsconfig-paths'\nimport { z } from 'zod'\nimport { resolveImport } from './resolve-import'\n\nconst explorer = cosmiconfig('gseller', {\n  searchPlaces: ['gseller.json'],\n})\n\nexport const rawConfigSchema = z\n  .object({\n    tsx: z.coerce.boolean().default(true),\n    graphql: z.string(),\n    tailwind: z.object({\n      config: z.string(),\n      css: z.string(),\n    }),\n    aliases: z.object({\n      components: z.string(),\n      utils: z.string(),\n    }),\n  })\n  .strict()\n\nexport type RawConfig = z.infer<typeof rawConfigSchema>\n\nexport const configSchema = rawConfigSchema.extend({\n  resolvedPaths: z.object({\n    graphql: z.string(),\n    tailwindConfig: z.string(),\n    tailwindCss: z.string(),\n    utils: z.string(),\n    components: z.string(),\n  }),\n})\n\nexport type Config = z.infer<typeof configSchema>\n\nexport async function getConfig(cwd: string) {\n  const config = await getRawConfig(cwd)\n\n  if (!config) {\n    return null\n  }\n\n  return await resolveConfigPaths(cwd, config)\n}\n\nexport async function resolveConfigPaths(cwd: string, config: RawConfig) {\n  // Read tsconfig.json.\n  const tsConfig = loadConfig(cwd)\n\n  if (tsConfig.resultType === 'failed') {\n    throw new Error(\n      `Failed to load ${config.tsx ? 'tsconfig' : 'jsconfig'}.json. ${\n        tsConfig.message ?? ''\n      }`.trim()\n    )\n  }\n\n  return configSchema.parse({\n    ...config,\n    resolvedPaths: {\n      graphql: path.resolve(cwd, config.graphql),\n      tailwindConfig: path.resolve(cwd, config.tailwind.config),\n      tailwindCss: path.resolve(cwd, config.tailwind.css),\n      utils: await resolveImport(config.aliases['utils'], tsConfig),\n      components: await resolveImport(config.aliases['components'], tsConfig),\n    },\n  })\n}\n\nexport async function getRawConfig(cwd: string): Promise<RawConfig | null> {\n  try {\n    const configResult = await explorer.search(cwd)\n\n    if (!configResult) {\n      return null\n    }\n\n    return rawConfigSchema.parse(configResult.config)\n  } catch (error) {\n    throw new Error(`Invalid configuration found in ${cwd}/components.json.`)\n  }\n}\n","import { createMatchPath, type ConfigLoaderSuccessResult } from 'tsconfig-paths'\n\nexport async function resolveImport(\n  importPath: string,\n  config: Pick<ConfigLoaderSuccessResult, 'absoluteBaseUrl' | 'paths'>\n) {\n  return createMatchPath(config.absoluteBaseUrl, config.paths)(\n    importPath,\n    undefined,\n    () => true,\n    ['.ts', '.tsx']\n  )\n}\n","import { detect } from '@antfu/ni'\n\nexport type PackageManagerType = 'yarn' | 'pnpm' | 'bun' | 'npm'\n\nexport async function getPackageManager(\n  targetDir: string\n): Promise<PackageManagerType> {\n  const packageManager = await detect({ programmatic: true, cwd: targetDir })\n\n  if (packageManager === 'yarn@berry') return 'yarn'\n  if (packageManager === 'pnpm@6') return 'pnpm'\n  if (packageManager === 'bun') return 'bun'\n\n  return packageManager ?? 'npm'\n}\n","import chalk from 'chalk'\n\nexport const logger = {\n  error(...args: unknown[]) {\n    console.log(chalk.red(...args))\n  },\n  warn(...args: unknown[]) {\n    console.log(chalk.yellow(...args))\n  },\n  info(...args: unknown[]) {\n    console.log(chalk.cyan(...args))\n  },\n  success(...args: unknown[]) {\n    console.log(chalk.green(...args))\n  },\n  break() {\n    console.log('')\n  },\n}\n","import { logger } from './logger'\n\nexport function handleError(error: unknown) {\n  if (typeof error === 'string') {\n    logger.error(error)\n    process.exit(1)\n  }\n\n  if (error instanceof Error) {\n    logger.error(error.message)\n    process.exit(1)\n  }\n\n  logger.error('Something went wrong. Please try again.')\n  process.exit(1)\n}\n","import fs from 'fs'\n\nexport async function isWriteable(directory: string): Promise<boolean> {\n  try {\n    await fs.promises.access(directory, (fs.constants || fs).W_OK)\n    return true\n  } catch (err) {\n    return false\n  }\n}\n","import type { InitialReturnValue } from 'prompts'\n\nexport const onPromptState = (state: {\n  value: InitialReturnValue\n  aborted: boolean\n  exited: boolean\n}) => {\n  if (state.aborted) {\n    process.stdout.write('\\x1B[?25h')\n    process.stdout.write('\\n')\n    process.exit(1)\n  }\n}\n","import chalk from 'chalk'\nimport { Command } from 'commander'\nimport fs, { existsSync } from 'fs'\nimport path from 'path'\nimport prompts from 'prompts'\nimport { z } from 'zod'\nimport { createApp } from '../helpers/create-app'\nimport { getPackageManager } from '../helpers/get-package-manager'\nimport { logger } from '../helpers/logger'\nimport { onPromptState } from '../helpers/prompt-state'\n\nlet projectPath: string = ''\n\nconst initOptionsSchema = z.object({\n  cwd: z.string(),\n  yes: z.boolean(),\n})\n\nexport const start = new Command()\n  .command('start')\n  .description('Inicia um projeto ')\n  .option('-y, --yes', 'Pular a confirmação de criação do projeto', false)\n  .option(\n    '-c, --cwd <cwd>',\n    'Diretório de trabalho. O padrão é o diretório atual.',\n    process.cwd()\n  )\n  .action(async (opts) => {\n    const urlGitHub = 'https://github.com/mateusp7/base-gseller'\n    try {\n      const options = initOptionsSchema.parse(opts)\n      const cwd = path.resolve(options.cwd)\n\n      if (!existsSync(cwd)) {\n        logger.error(`O caminho ${cwd} não existe. Por favor, tente novamente.`)\n        process.exit(1)\n      }\n\n      const prompt = await promptForConfig()\n      await initStart(prompt.resolvedProjectPath, urlGitHub, cwd)\n    } catch (err) {}\n  })\n\nexport async function promptForConfig() {\n  if (typeof projectPath === 'string') {\n    projectPath = projectPath.trim()\n  }\n\n  const res = await prompts({\n    onState: onPromptState,\n    type: 'text',\n    name: 'path',\n    message: `Qual o nome do seu projeto?`,\n    initial: 'gseller',\n  })\n\n  if (typeof res.path === 'string') {\n    projectPath = res.path.trim()\n  }\n\n  const resolvedProjectPath = path.resolve(projectPath)\n\n  return { resolvedProjectPath }\n}\n\nexport async function initStart(\n  resolvedProjectPath: string,\n  urlGitHub: string,\n  cwd: string\n) {\n  const highlight = (text: string) => chalk.cyan(text)\n\n  const root = path.resolve(resolvedProjectPath)\n  const appName = path.basename(root)\n  const folderExists = fs.existsSync(root)\n\n  if (folderExists) {\n    process.exit(1)\n  }\n\n  logger.info(\n    `Criando pasta ${highlight(appName)} no caminho ${highlight(root)}...`\n  )\n\n  logger.info('')\n\n  const packageManager = await getPackageManager(cwd)\n\n  await createApp({\n    appPath: resolvedProjectPath,\n    example: urlGitHub,\n    packageManager,\n  })\n}\n","import retry from 'async-retry'\nimport chalk from 'chalk'\nimport fs from 'fs'\nimport path from 'path'\nimport { downloadAndExtractExample, downloadAndExtractRepo } from './download'\nimport { existsInRepo, getRepoInfo, hasRepo } from './example'\nimport { PackageManagerType } from './get-package-manager'\nimport { install } from './install'\nimport { isWriteable } from './is-writeable'\nimport { logger } from './logger'\nimport { makeDir } from './make-dir'\n\nexport type RepoInfo = {\n  username: string\n  name: string\n  branch: string\n  filePath: string\n}\n\nexport class DownloadError extends Error {}\n\nexport async function createApp({\n  appPath,\n  example,\n  packageManager,\n}: {\n  appPath: string\n  example: string\n  packageManager: PackageManagerType\n}): Promise<void> {\n  let repoInfo: RepoInfo | undefined\n\n  if (example) {\n    let repoUrl: URL | undefined\n\n    try {\n      repoUrl = new URL(example)\n    } catch (error: unknown) {\n      const err = error as Error & { code: string | undefined }\n      if (err.code !== 'ERR_INVALID_URL') {\n        console.error(error)\n        process.exit(1)\n      }\n    }\n\n    if (repoUrl) {\n      if (repoUrl.origin !== 'https://github.com') {\n        console.error(\n          `URL inválida: ${chalk.red(\n            `\"${example}\"`\n          )}. Apenas repositórios do GitHui são permitidos. Por favor, use uma URL de um repositório do GitHub e tente novamente.`\n        )\n        process.exit(1)\n      }\n\n      repoInfo = await getRepoInfo(repoUrl)\n\n      if (!repoInfo) {\n        console.error(\n          `Pasta inválida nessa URL do GitHub: ${chalk.red(\n            `\"${example}\"`\n          )}. Por favor, ajuste a URL e tente novamente.`\n        )\n        process.exit(1)\n      }\n\n      const found = await hasRepo(repoInfo)\n\n      if (!found) {\n        console.error(\n          `Não podemos encontrar a localização do repositório ${chalk.red(\n            `\"${example}\"`\n          )}. Por favor, verifique se o repositório existe e tente novamente.`\n        )\n        process.exit(1)\n      }\n    } else if (example !== '__internal-testing-retry') {\n      const found = await existsInRepo(example)\n\n      if (!found) {\n        console.error(\n          `Could not locate an example named ${chalk.red(\n            `\"${example}\"`\n          )}. It could be due to the following:\\n`,\n          `1. Your spelling of example ${chalk.red(\n            `\"${example}\"`\n          )} might be incorrect.\\n`,\n          `2. You might not be connected to the internet or you are behind a proxy.`\n        )\n        process.exit(1)\n      }\n    }\n  }\n\n  const root = path.resolve(appPath)\n\n  if (!(await isWriteable(path.dirname(root)))) {\n    console.error(\n      'A aplicação não pode ser escrita, por favor verifique as permissões da pasta e tente novamente.'\n    )\n    process.exit(1)\n  }\n\n  const appName = path.basename(root)\n\n  await makeDir(root)\n\n  logger.info(`Criando um novo projeto Gseller em ${chalk.green(root)}.`)\n  logger.info()\n\n  process.chdir(root)\n\n  const packageJsonPath = path.join(root, 'package.json')\n  let hasPackageJson = false\n\n  try {\n    if (repoInfo) {\n      const repoInfo2 = repoInfo\n      logger.info(\n        `Baixando arquivos do repositório ${chalk.cyan(\n          example\n        )}. Isso pode demorar um pouco.`\n      )\n      logger.info()\n\n      await retry(() => downloadAndExtractRepo(root, repoInfo2), {\n        retries: 3,\n      })\n    } else {\n      logger.info(\n        `Baixando arquivos do repositório ${chalk.cyan(\n          example\n        )}. Isso pode demorar um pouco.`\n      )\n      logger.info()\n      await retry(() => downloadAndExtractExample(root, example), {\n        retries: 3,\n      })\n    }\n  } catch (reason) {\n    function isErrorLike(err: unknown): err is { message: string } {\n      return (\n        typeof err === 'object' &&\n        err !== null &&\n        typeof (err as { message?: unknown }).message === 'string'\n      )\n    }\n    throw new DownloadError(isErrorLike(reason) ? reason.message : reason + '')\n  }\n  hasPackageJson = fs.existsSync(packageJsonPath)\n\n  logger.info('')\n\n  if (hasPackageJson) {\n    console.log('Instalando pacotes, isso pode demorar um pouco.')\n    await install(packageManager, true)\n  }\n\n  logger.info(`Projeto ${appName} criado com ${chalk.green('sucesso!')}`)\n  logger.info('')\n\n  logger.info(`Localização: ${chalk.blue(appPath)}`)\n\n  logger.info('')\n}\n","import { createWriteStream, promises as fs } from 'fs'\nimport got from 'got'\nimport { tmpdir } from 'os'\nimport { join } from 'path'\nimport { Stream } from 'stream'\nimport tar from 'tar'\nimport { promisify } from 'util'\nimport { RepoInfo } from './create-app'\n\nconst pipeline = promisify(Stream.pipeline)\n\nasync function downloadTar(url: string) {\n  const tempFile = join(tmpdir(), `next.js-cna-example.temp-${Date.now()}`)\n  await pipeline(got.stream(url), createWriteStream(tempFile))\n  return tempFile\n}\n\nexport async function downloadAndExtractRepo(\n  root: string,\n  { username, name, branch, filePath }: RepoInfo\n) {\n  const tempFile = await downloadTar(\n    `https://codeload.github.com/${username}/${name}/tar.gz/${branch}`\n  )\n\n  await tar.x({\n    file: tempFile,\n    cwd: root,\n    strip: filePath ? filePath.split('/').length + 1 : 1,\n    filter: (p) =>\n      p.startsWith(\n        `${name}-${branch.replace(/\\//g, '-')}${\n          filePath ? `/${filePath}/` : '/'\n        }`\n      ),\n  })\n\n  await fs.unlink(tempFile)\n}\n\nexport async function downloadAndExtractExample(root: string, name: string) {\n  if (name === '__internal-testing-retry') {\n    throw new Error('This is an internal example for testing the CLI.')\n  }\n\n  const tempFile = await downloadTar(\n    'https://codeload.github.com/vercel/next.js/tar.gz/canary'\n  )\n\n  await tar.x({\n    file: tempFile,\n    cwd: root,\n    strip: 2 + name.split('/').length,\n    filter: (p) => p.includes(`next.js-canary/examples/${name}/`),\n  })\n\n  await fs.unlink(tempFile)\n}\n","import got from 'got'\nimport { RepoInfo } from './create-app'\n\nexport async function isUrlOk(url: string): Promise<boolean> {\n  const res = await got.head(url).catch((e) => e)\n  return res.statusCode === 200\n}\n\nexport async function getRepoInfo(\n  url: URL,\n  examplePath?: string\n): Promise<RepoInfo | undefined> {\n  const [, username, name, t, _branch, ...file] = url.pathname.split('/')\n  const filePath = examplePath ? examplePath.replace(/^\\//, '') : file.join('/')\n\n  if (\n    // Support repos whose entire purpose is to be a Next.js example, e.g.\n    // https://github.com/:username/:my-cool-nextjs-example-repo-name.\n    t === undefined ||\n    // Support GitHub URL that ends with a trailing slash, e.g.\n    // https://github.com/:username/:my-cool-nextjs-example-repo-name/\n    // In this case \"t\" will be an empty string while the next part \"_branch\" will be undefined\n    (t === '' && _branch === undefined)\n  ) {\n    const infoResponse = await got(\n      `https://api.github.com/repos/${username}/${name}`\n    ).catch((e) => e)\n    if (infoResponse.statusCode !== 200) {\n      return\n    }\n    const info = JSON.parse(infoResponse.body)\n    return { username, name, branch: info['default_branch'], filePath }\n  }\n\n  // If examplePath is available, the branch name takes the entire path\n  const branch = examplePath\n    ? `${_branch}/${file.join('/')}`.replace(new RegExp(`/${filePath}|/$`), '')\n    : _branch\n\n  if (username && name && branch && t === 'tree') {\n    return { username, name, branch, filePath }\n  }\n}\n\nexport function hasRepo({\n  username,\n  name,\n  branch,\n  filePath,\n}: RepoInfo): Promise<boolean> {\n  const contentsUrl = `https://api.github.com/repos/${username}/${name}/contents`\n  const packagePath = `${filePath ? `/${filePath}` : ''}/package.json`\n\n  return isUrlOk(contentsUrl + packagePath + `?ref=${branch}`)\n}\n\nexport function existsInRepo(nameOrUrl: string): Promise<boolean> {\n  try {\n    const url = new URL(nameOrUrl)\n    return isUrlOk(url.href)\n  } catch {\n    return isUrlOk(\n      `https://api.github.com/repos/vercel/next.js/contents/examples/${encodeURIComponent(\n        nameOrUrl\n      )}`\n    )\n  }\n}\n","import chalk from 'chalk'\nimport spawn from 'cross-spawn'\nimport ora from 'ora'\nimport { PackageManagerType } from './get-package-manager'\n\nexport async function install(\n  /** Indicate which package manager to use. */\n  packageManager: PackageManagerType,\n  /** Indicate whether there is an active Internet connection.*/\n  isOnline: boolean\n): Promise<void> {\n  let args: string[] = ['install']\n  if (!isOnline) {\n    console.log(\n      chalk.yellow(\n        'You appear to be offline.\\nFalling back to the local cache.'\n      )\n    )\n    args.push('--offline')\n  }\n  /**\n   * Return a Promise that resolves once the installation is finished.\n   */\n  return new Promise((resolve, reject) => {\n    /**\n     * Spawn the installation process.\n     */\n    const child = spawn(packageManager, args, {\n      stdio: 'inherit',\n      env: {\n        ...process.env,\n        ADBLOCK: '1',\n        // we set NODE_ENV to development as pnpm skips dev\n        // dependencies when production\n        NODE_ENV: 'development',\n        DISABLE_OPENCOLLECTIVE: '1',\n      },\n    })\n    child.on('close', (code) => {\n      if (code !== 0) {\n        reject({ command: `${packageManager} ${args.join(' ')}` })\n        return\n      }\n      resolve()\n    })\n  })\n}\n\nexport async function addNextGlobal(): Promise<void> {\n  return new Promise((resolve, reject) => {\n    const spinner = ora(`Iniciando instalação do next globalmente`).start()\n    const child = spawn('npm', ['i', '-g', 'create-next-app'])\n    spinner.succeed()\n    child.on('close', (code) => {\n      if (code !== 0) {\n        spinner.fail(\n          'Erro ao instalar next globalmente. Por favor, tente novamente'\n        )\n        return reject(new Error('Failed'))\n      }\n      return resolve()\n    })\n  })\n}\n\nexport async function startNextProject(cwd: string): Promise<void> {\n  {\n    return new Promise((resolve, reject) => {\n      const spinner = ora(`Iniciando instalação do app next`).start()\n      const child = spawn('npx', ['create-next-app@latest', cwd], {\n        stdio: 'inherit',\n        cwd,\n      })\n      spinner.succeed()\n      child.on('close', (code) => {\n        if (code !== 0) {\n          return reject(new Error('Failed'))\n        }\n        return resolve()\n      })\n    })\n  }\n}\n","import fs from 'fs'\n\nexport function makeDir(\n  root: string,\n  options = { recursive: true }\n): Promise<string | undefined> {\n  return fs.promises.mkdir(root, options)\n}\n"],"mappings":";AACA,OAAS,WAAAA,OAAe,YCDxB,OAAS,WAAAC,OAAe,YACxB,OAAS,cAAAC,EAAY,YAAYC,MAAU,KAC3C,OAAOC,MAAS,MAChB,OAAOC,MAAU,OAEjB,OAAOC,MAAW,QAClB,OAAS,SAAAC,OAAa,QACtB,OAAOC,OAAc,kBACrB,OAAOC,OAAa,UACpB,OAAS,KAAAC,MAAS,MCTX,IAAMC,EAAqB,eACrBC,EAAgB,cAChBC,EAAuB,sBACvBC,EAA0B,qBAC1BC,EAAkB,kBAClBC,EAAuB,CAClC,sBACA,2BACA,OACA,iBACA,QACF,EAEaC,EAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQRC,EAAqrBlC,OAAS,eAAAC,OAAmB,cAC5B,OAAOC,MAAU,OACjB,OAAS,cAAAC,OAAkB,iBAC3B,OAAS,KAAAC,MAAS,MCHlB,OAAS,mBAAAC,OAAuD,iBAEhE,eAAsBC,EACpBC,EACAC,EACA,CACA,OAAOH,GAAgBG,EAAO,gBAAiBA,EAAO,KAAK,EACzDD,EACA,OACA,IAAM,GACN,CAAC,MAAO,MAAM,CAChB,CACF,CDNA,IAAME,GAAWC,GAAY,UAAW,CACtC,aAAc,CAAC,cAAc,CAC/B,CAAC,EAEYC,EAAkBC,EAC5B,OAAO,CACN,IAAKA,EAAE,OAAO,QAAQ,EAAE,QAAQ,EAAI,EACpC,QAASA,EAAE,OAAO,EAClB,SAAUA,EAAE,OAAO,CACjB,OAAQA,EAAE,OAAO,EACjB,IAAKA,EAAE,OAAO,CAChB,CAAC,EACD,QAASA,EAAE,OAAO,CAChB,WAAYA,EAAE,OAAO,EACrB,MAAOA,EAAE,OAAO,CAClB,CAAC,CACH,CAAC,EACA,OAAO,EAIGC,GAAeF,EAAgB,OAAO,CACjD,cAAeC,EAAE,OAAO,CACtB,QAASA,EAAE,OAAO,EAClB,eAAgBA,EAAE,OAAO,EACzB,YAAaA,EAAE,OAAO,EACtB,MAAOA,EAAE,OAAO,EAChB,WAAYA,EAAE,OAAO,CACvB,CAAC,CACH,CAAC,EAID,eAAsBE,EAAUC,EAAa,CAC3C,IAAMC,EAAS,MAAMC,GAAaF,CAAG,EAErC,OAAKC,EAIE,MAAME,EAAmBH,EAAKC,CAAM,EAHlC,IAIX,CAEA,eAAsBE,EAAmBH,EAAaC,EAAmB,CAEvE,IAAMG,EAAWC,GAAWL,CAAG,EAE/B,GAAII,EAAS,aAAe,SAC1B,MAAM,IAAI,MACR,kBAAkBH,EAAO,IAAM,WAAa,UAAU,UACpDG,EAAS,SAAW,EACtB,GAAG,KAAK,CACV,EAGF,OAAON,GAAa,MAAM,CACxB,GAAGG,EACH,cAAe,CACb,QAASK,EAAK,QAAQN,EAAKC,EAAO,OAAO,EACzC,eAAgBK,EAAK,QAAQN,EAAKC,EAAO,SAAS,MAAM,EACxD,YAAaK,EAAK,QAAQN,EAAKC,EAAO,SAAS,GAAG,EAClD,MAAO,MAAMM,EAAcN,EAAO,QAAQ,MAAUG,CAAQ,EAC5D,WAAY,MAAMG,EAAcN,EAAO,QAAQ,WAAeG,CAAQ,CACxE,CACF,CAAC,CACH,CAEA,eAAsBF,GAAaF,EAAwC,CACzE,GAAI,CACF,IAAMQ,EAAe,MAAMd,GAAS,OAAOM,CAAG,EAE9C,OAAKQ,EAIEZ,EAAgB,MAAMY,EAAa,MAAM,EAHvC,IAIX,MAAgB,CACd,MAAM,IAAI,MAAM,kCAAkCR,CAAG,mBAAmB,CAC1E,CACF,CErFA,OAAS,UAAAS,OAAc,YAIvB,eAAsBC,EACpBC,EAC6B,CAC7B,IAAMC,EAAiB,MAAMH,GAAO,CAAE,aAAc,GAAM,IAAKE,CAAU,CAAC,EAE1E,OAAIC,IAAmB,aAAqB,OACxCA,IAAmB,SAAiB,OACpCA,IAAmB,MAAc,MAE9BA,GAAkB,KAC3B,CCdA,OAAOC,MAAW,QAEX,IAAMC,EAAS,CACpB,SAASC,EAAiB,CACxB,QAAQ,IAAIF,EAAM,IAAI,GAAGE,CAAI,CAAC,CAChC,EACA,QAAQA,EAAiB,CACvB,QAAQ,IAAIF,EAAM,OAAO,GAAGE,CAAI,CAAC,CACnC,EACA,QAAQA,EAAiB,CACvB,QAAQ,IAAIF,EAAM,KAAK,GAAGE,CAAI,CAAC,CACjC,EACA,WAAWA,EAAiB,CAC1B,QAAQ,IAAIF,EAAM,MAAM,GAAGE,CAAI,CAAC,CAClC,EACA,OAAQ,CACN,QAAQ,IAAI,EAAE,CAChB,CACF,EChBO,SAASC,EAAYC,EAAgB,CACtC,OAAOA,GAAU,WACnBC,EAAO,MAAMD,CAAK,EAClB,QAAQ,KAAK,CAAC,GAGZA,aAAiB,QACnBC,EAAO,MAAMD,EAAM,OAAO,EAC1B,QAAQ,KAAK,CAAC,GAGhBC,EAAO,MAAM,yCAAyC,EACtD,QAAQ,KAAK,CAAC,CAChB,CCfA,OAAOC,MAAQ,KAEf,eAAsBC,EAAYC,EAAqC,CACrE,GAAI,CACF,aAAMF,EAAG,SAAS,OAAOE,GAAYF,EAAG,WAAaA,GAAI,IAAI,EACtD,EACT,MAAc,CACZ,MAAO,EACT,CACF,CCPO,IAAMG,EAAiBC,GAIxB,CACAA,EAAM,UACR,QAAQ,OAAO,MAAM,WAAW,EAChC,QAAQ,OAAO,MAAM;AAAA,CAAI,EACzB,QAAQ,KAAK,CAAC,EAElB,ERoBA,IAAMC,GAAoBC,EAAE,OAAO,CACjC,IAAKA,EAAE,OAAO,EACd,IAAKA,EAAE,QAAQ,CACjB,CAAC,EAEYC,EAAO,IAAIC,GAAQ,EAC7B,QAAQ,MAAM,EACd,YAAY,uDAAiD,EAC7D,OAAO,YAAa,wDAA6C,EAAK,EACtE,OACC,kBACA,mEACA,QAAQ,IAAI,CACd,EACC,OAAO,MAAOC,GAAS,CACtB,GAAI,CACF,IAAMC,EAAUL,GAAkB,MAAMI,CAAI,EACtCE,EAAMC,EAAK,QAAQF,EAAQ,GAAG,EAE/BG,EAAWF,CAAG,IACjBG,EAAO,MAAM,aAAaH,CAAG,6CAA0C,EACvE,QAAQ,KAAK,CAAC,GAGhB,IAAMI,EAAiB,MAAMC,EAAUL,CAAG,EACpCM,EAAe,MAAMC,GAAgBH,CAAc,EAEzD,MAAMI,GAAQR,EAAKM,CAAY,EAE/BH,EAAO,KAAK,EAAE,EACdA,EAAO,KAAK,uDAAiD,EAC7DA,EAAO,KAAK,EAAE,CAChB,OAASM,EAAK,CACZC,EAAYD,CAAG,CACjB,CACF,CAAC,EAEH,eAAsBF,GAAgBI,EAA+B,KAAM,CACzE,IAAMC,EAAaC,GAAiBC,EAAM,KAAKD,CAAI,EAE7Cd,EAAU,MAAMgB,GAAQ,CAC5B,CACE,QAASC,EACT,KAAM,OACN,KAAM,UACN,QAAS,oCAAiCJ,EAAU,SAAS,CAAC,IAC9D,QAASD,GAAe,SAAWM,CACrC,EACA,CACE,QAASD,EACT,KAAM,OACN,KAAM,iBACN,QAAS,oCAAiCJ,EACxC,oBACF,CAAC,IACD,QAASD,GAAe,SAAS,QAAUO,CAC7C,EACA,CACE,QAASF,EACT,KAAM,OACN,KAAM,cACN,QAAS,sCAAmCJ,EAAU,YAAY,CAAC,IACnE,QAASD,GAAe,SAAS,KAAOQ,CAC1C,EACA,CACE,QAASH,EACT,KAAM,OACN,KAAM,aACN,QAAS,8CAAwCJ,EAC/C,YACF,CAAC,IACD,QAASD,GAAe,QAAQ,YAAiBS,CACnD,EACA,CACE,QAASJ,EACT,KAAM,OACN,KAAM,QACN,QAAS,8CAAwCJ,EAAU,OAAO,CAAC,IACnE,QAASD,GAAe,QAAQ,OAAYU,CAC9C,CACF,CAAC,EAEKC,EAASC,EAAgB,MAAM,CACnC,IAAK,GACL,QAASxB,EAAQ,QACjB,SAAU,CACR,OAAQA,EAAQ,eAChB,IAAKA,EAAQ,WACf,EACA,QAAS,CACP,MAAOA,EAAQ,MACf,WAAYA,EAAQ,UACtB,CACF,CAAC,EAEKyB,EAAsBvB,EAAK,QAAQ,EACzC,OAAAE,EAAO,KAAK,EAAE,EAEPsB,GAAkBD,EAAqBF,CAAM,CACtD,CAEA,eAAsBG,GACpBzB,EACAsB,EACA,CACAnB,EAAO,KAAK,EAAE,EACd,IAAMuB,EAAUC,EAAI,mBAAmBb,EAAM,KAAK,cAAc,CAAC,EAAE,EAAE,MAAM,EAI3E,GAFmB,MAAMc,EAAY5B,CAAG,EAIxC,GAAI,CACF,IAAM6B,EAAa5B,EAAK,QAAQD,EAAK,cAAc,EACnD,aAAM8B,EAAG,UAAUD,EAAY,KAAK,UAAUP,EAAQ,KAAM,CAAC,EAAG,OAAO,EACvEI,EAAQ,QAAQ,EAChBvB,EAAO,KAAK,EAAE,EAEP,MAAM4B,EAAmB/B,EAAKsB,CAAM,CAC7C,OAASb,EAAK,CACZN,EAAO,MAAMM,CAAG,CAClB,CACF,CAEA,eAAsBD,GAAQR,EAAasB,EAA4B,CACrE,GAAI,CAACA,EAAQ,OAEb,OAAW,CAACU,EAAKC,CAAY,IAAK,OAAO,QAAQX,EAAO,aAAa,EAAG,CACtE,IAAIY,EAAUjC,EAAK,QAAQgC,CAAY,EACnChC,EAAK,QAAQgC,CAAY,EACzBA,EAEAD,IAAQ,SAAWC,EAAa,SAAS,QAAQ,IACnDC,EAAUA,EAAQ,QAAQ,WAAY,EAAE,GAGrChC,EAAWgC,CAAO,GACrB,MAAMJ,EAAG,MAAMI,EAAS,CAAE,UAAW,EAAK,CAAC,CAE/C,CAEA,IAAMC,EAAyBC,EAEzBC,EAA6BV,EACjC,mBAAmBb,EAAM,KAAK,oBAAoB,CAAC,EACrD,GAAG,MAAM,EACT,MAAMgB,EAAG,UACPR,EAAO,cAAc,eACrBgB,GAASH,CAAsB,EAAE,CAC/B,UAAW,KACX,OAAQ,EACV,CAAC,EACD,MACF,EACAE,EAA2B,QAAQ,EACnClC,EAAO,KAAK,EAAE,EAEd,IAAMoC,EAAoBZ,EACxB,mBAAmBb,EAAM,KAAK,OAAO,CAAC,EACxC,GAAG,MAAM,EACT,MAAMgB,EAAG,UAAU,GAAGR,EAAO,cAAc,KAAK,MAAOkB,EAAO,MAAM,EACpED,EAAkB,QAAQ,EAC1BpC,EAAO,KAAK,EAAE,EAEd,IAAMsC,EAAsBd,EAAI,+BAA4B,GAAG,MAAM,EAC/De,EAAiB,MAAMC,EAAkB3C,CAAG,EAE5C4C,EAAO,CAAC,GAAGC,CAAoB,EAErC1C,EAAO,KAAK,EAAE,EACdA,EAAO,KAAK,EAAE,EACdA,EAAO,KAAK,iBAAc,EAC1BA,EAAO,KAAK,EAAE,EACdyC,EAAK,QAASE,GAAQ,CACpB3C,EAAO,KAAK,KAAK2C,CAAG,EAAE,CACxB,CAAC,EACD3C,EAAO,KAAK,EAAE,EAEd,MAAM4C,GACJL,EACA,CAACA,IAAmB,MAAQ,UAAY,MAAO,GAAGE,CAAI,EACtD,CACE,IAAA5C,CACF,CACF,EAEAyC,GAAqB,QAAQ,CAC/B,CS3NA,OAAOO,OAAW,QAClB,OAAS,WAAAC,OAAe,YACxB,OAAOC,IAAM,cAAAC,OAAkB,KAC/B,OAAOC,MAAU,OACjB,OAAOC,OAAa,UACpB,OAAS,KAAAC,MAAS,MCLlB,OAAOC,OAAW,cAClB,OAAOC,MAAW,QAClB,OAAOC,OAAQ,KACf,OAAOC,MAAU,OCHjB,OAAS,qBAAAC,GAAmB,YAAYC,MAAU,KAClD,OAAOC,OAAS,MAChB,OAAS,UAAAC,OAAc,KACvB,OAAS,QAAAC,OAAY,OACrB,OAAS,UAAAC,OAAc,SACvB,OAAOC,MAAS,MAChB,OAAS,aAAAC,OAAiB,OAG1B,IAAMC,GAAWD,GAAUF,GAAO,QAAQ,EAE1C,eAAeI,EAAYC,EAAa,CACtC,IAAMC,EAAWP,GAAKD,GAAO,EAAG,4BAA4B,KAAK,IAAI,CAAC,EAAE,EACxE,aAAMK,GAASN,GAAI,OAAOQ,CAAG,EAAGV,GAAkBW,CAAQ,CAAC,EACpDA,CACT,CAEA,eAAsBC,EACpBC,EACA,CAAE,SAAAC,EAAU,KAAAC,EAAM,OAAAC,EAAQ,SAAAC,CAAS,EACnC,CACA,IAAMN,EAAW,MAAMF,EACrB,+BAA+BK,CAAQ,IAAIC,CAAI,WAAWC,CAAM,EAClE,EAEA,MAAMV,EAAI,EAAE,CACV,KAAMK,EACN,IAAKE,EACL,MAAOI,EAAWA,EAAS,MAAM,GAAG,EAAE,OAAS,EAAI,EACnD,OAASC,GACPA,EAAE,WACA,GAAGH,CAAI,IAAIC,EAAO,QAAQ,MAAO,GAAG,CAAC,GACnCC,EAAW,IAAIA,CAAQ,IAAM,GAC/B,EACF,CACJ,CAAC,EAED,MAAMhB,EAAG,OAAOU,CAAQ,CAC1B,CAEA,eAAsBQ,EAA0BN,EAAcE,EAAc,CAC1E,GAAIA,IAAS,2BACX,MAAM,IAAI,MAAM,kDAAkD,EAGpE,IAAMJ,EAAW,MAAMF,EACrB,0DACF,EAEA,MAAMH,EAAI,EAAE,CACV,KAAMK,EACN,IAAKE,EACL,MAAO,EAAIE,EAAK,MAAM,GAAG,EAAE,OAC3B,OAASG,GAAMA,EAAE,SAAS,2BAA2BH,CAAI,GAAG,CAC9D,CAAC,EAED,MAAMd,EAAG,OAAOU,CAAQ,CAC1B,CCzDA,OAAOS,MAAS,MAGhB,eAAsBC,EAAQC,EAA+B,CAE3D,OADY,MAAMF,EAAI,KAAKE,CAAG,EAAE,MAAOC,GAAMA,CAAC,GACnC,aAAe,GAC5B,CAEA,eAAsBC,GACpBF,EACAG,EAC+B,CAC/B,GAAM,CAAC,CAAEC,EAAUC,EAAMC,EAAGC,EAAS,GAAGC,CAAI,EAAIR,EAAI,SAAS,MAAM,GAAG,EAChES,EAAWN,EAAcA,EAAY,QAAQ,MAAO,EAAE,EAAIK,EAAK,KAAK,GAAG,EAE7E,GAGEF,IAAM,QAILA,IAAM,IAAMC,IAAY,OACzB,CACA,IAAMG,EAAe,MAAMZ,EACzB,gCAAgCM,CAAQ,IAAIC,CAAI,EAClD,EAAE,MAAOJ,GAAMA,CAAC,EAChB,GAAIS,EAAa,aAAe,IAC9B,OAEF,IAAMC,EAAO,KAAK,MAAMD,EAAa,IAAI,EACzC,MAAO,CAAE,SAAAN,EAAU,KAAAC,EAAM,OAAQM,EAAK,eAAmB,SAAAF,CAAS,CACpE,CAGA,IAAMG,EAAST,EACX,GAAGI,CAAO,IAAIC,EAAK,KAAK,GAAG,CAAC,GAAG,QAAQ,IAAI,OAAO,IAAIC,CAAQ,KAAK,EAAG,EAAE,EACxEF,EAEJ,GAAIH,GAAYC,GAAQO,GAAUN,IAAM,OACtC,MAAO,CAAE,SAAAF,EAAU,KAAAC,EAAM,OAAAO,EAAQ,SAAAH,CAAS,CAE9C,CAEO,SAASI,GAAQ,CACtB,SAAAT,EACA,KAAAC,EACA,OAAAO,EACA,SAAAH,CACF,EAA+B,CAC7B,IAAMK,EAAc,gCAAgCV,CAAQ,IAAIC,CAAI,YAC9DU,EAAc,GAAGN,EAAW,IAAIA,CAAQ,GAAK,EAAE,gBAErD,OAAOV,EAAQe,EAAcC,EAAc,QAAQH,CAAM,EAAE,CAC7D,CAEO,SAASI,GAAaC,EAAqC,CAChE,GAAI,CACF,IAAMjB,EAAM,IAAI,IAAIiB,CAAS,EAC7B,OAAOlB,EAAQC,EAAI,IAAI,CACzB,MAAQ,CACN,OAAOD,EACL,iEAAiE,mBAC/DkB,CACF,CAAC,EACH,CACF,CACF,CCnEA,OAAOC,OAAW,QAClB,OAAOC,OAAW,cAClB,OAAOC,OAAS,MAGhB,eAAsBC,GAEpBC,EAEAC,EACe,CACf,IAAIC,EAAiB,CAAC,SAAS,EAC/B,OAAKD,IACH,QAAQ,IACNL,GAAM,OACJ;AAAA,iCACF,CACF,EACAM,EAAK,KAAK,WAAW,GAKhB,IAAI,QAAQ,CAACC,EAASC,IAAW,CAIxBP,GAAMG,EAAgBE,EAAM,CACxC,MAAO,UACP,IAAK,CACH,GAAG,QAAQ,IACX,QAAS,IAGT,SAAU,cACV,uBAAwB,GAC1B,CACF,CAAC,EACK,GAAG,QAAUG,GAAS,CAC1B,GAAIA,IAAS,EAAG,CACdD,EAAO,CAAE,QAAS,GAAGJ,CAAc,IAAIE,EAAK,KAAK,GAAG,CAAC,EAAG,CAAC,EACzD,MACF,CACAC,EAAQ,CACV,CAAC,CACH,CAAC,CACH,CC9CA,OAAOG,OAAQ,KAER,SAASC,GACdC,EACAC,EAAU,CAAE,UAAW,EAAK,EACC,CAC7B,OAAOH,GAAG,SAAS,MAAME,EAAMC,CAAO,CACxC,CJYO,IAAMC,EAAN,cAA4B,KAAM,CAAC,EAE1C,eAAsBC,GAAU,CAC9B,QAAAC,EACA,QAAAC,EACA,eAAAC,CACF,EAIkB,CAChB,IAAIC,EAEJ,GAAIF,EAAS,CACX,IAAIG,EAEJ,GAAI,CACFA,EAAU,IAAI,IAAIH,CAAO,CAC3B,OAASI,EAAgB,CACXA,EACJ,OAAS,oBACf,QAAQ,MAAMA,CAAK,EACnB,QAAQ,KAAK,CAAC,EAElB,CAEID,GACEA,EAAQ,SAAW,uBACrB,QAAQ,MACN,oBAAiBE,EAAM,IACrB,IAAIL,CAAO,GACb,CAAC,gIACH,EACA,QAAQ,KAAK,CAAC,GAGhBE,EAAW,MAAMI,GAAYH,CAAO,EAE/BD,IACH,QAAQ,MACN,0CAAuCG,EAAM,IAC3C,IAAIL,CAAO,GACb,CAAC,8CACH,EACA,QAAQ,KAAK,CAAC,GAGF,MAAMO,GAAQL,CAAQ,IAGlC,QAAQ,MACN,kEAAsDG,EAAM,IAC1D,IAAIL,CAAO,GACb,CAAC,sEACH,EACA,QAAQ,KAAK,CAAC,IAEPA,IAAY,6BACP,MAAMQ,GAAaR,CAAO,IAGtC,QAAQ,MACN,qCAAqCK,EAAM,IACzC,IAAIL,CAAO,GACb,CAAC;AAAA,EACD,+BAA+BK,EAAM,IACnC,IAAIL,CAAO,GACb,CAAC;AAAA,EACD,0EACF,EACA,QAAQ,KAAK,CAAC,GAGpB,CAEA,IAAMS,EAAOC,EAAK,QAAQX,CAAO,EAE3B,MAAMY,EAAYD,EAAK,QAAQD,CAAI,CAAC,IACxC,QAAQ,MACN,6GACF,EACA,QAAQ,KAAK,CAAC,GAGhB,IAAMG,EAAUF,EAAK,SAASD,CAAI,EAElC,MAAMI,GAAQJ,CAAI,EAElBK,EAAO,KAAK,sCAAsCT,EAAM,MAAMI,CAAI,CAAC,GAAG,EACtEK,EAAO,KAAK,EAEZ,QAAQ,MAAML,CAAI,EAElB,IAAMM,EAAkBL,EAAK,KAAKD,EAAM,cAAc,EAClDO,EAAiB,GAErB,GAAI,CACF,GAAId,EAAU,CACZ,IAAMe,EAAYf,EAClBY,EAAO,KACL,uCAAoCT,EAAM,KACxCL,CACF,CAAC,+BACH,EACAc,EAAO,KAAK,EAEZ,MAAMI,GAAM,IAAMC,EAAuBV,EAAMQ,CAAS,EAAG,CACzD,QAAS,CACX,CAAC,CACH,MACEH,EAAO,KACL,uCAAoCT,EAAM,KACxCL,CACF,CAAC,+BACH,EACAc,EAAO,KAAK,EACZ,MAAMI,GAAM,IAAME,EAA0BX,EAAMT,CAAO,EAAG,CAC1D,QAAS,CACX,CAAC,CAEL,OAASqB,EAAQ,CACf,IAASC,EAAT,SAAqBC,EAA0C,CAC7D,OACE,OAAOA,GAAQ,UACfA,IAAQ,MACR,OAAQA,EAA8B,SAAY,QAEtD,EANS,IAAAD,IAOT,MAAM,IAAIzB,EAAcyB,EAAYD,CAAM,EAAIA,EAAO,QAAUA,EAAS,EAAE,CAC5E,CACAL,EAAiBQ,GAAG,WAAWT,CAAe,EAE9CD,EAAO,KAAK,EAAE,EAEVE,IACF,QAAQ,IAAI,iDAAiD,EAC7D,MAAMS,GAAQxB,EAAgB,EAAI,GAGpCa,EAAO,KAAK,WAAWF,CAAO,eAAeP,EAAM,MAAM,UAAU,CAAC,EAAE,EACtES,EAAO,KAAK,EAAE,EAEdA,EAAO,KAAK,sBAAgBT,EAAM,KAAKN,CAAO,CAAC,EAAE,EAEjDe,EAAO,KAAK,EAAE,CAChB,CDzJA,IAAIY,EAAsB,GAEpBC,GAAoBC,EAAE,OAAO,CACjC,IAAKA,EAAE,OAAO,EACd,IAAKA,EAAE,QAAQ,CACjB,CAAC,EAEYC,GAAQ,IAAIC,GAAQ,EAC9B,QAAQ,OAAO,EACf,YAAY,oBAAoB,EAChC,OAAO,YAAa,wDAA6C,EAAK,EACtE,OACC,kBACA,mEACA,QAAQ,IAAI,CACd,EACC,OAAO,MAAOC,GAAS,CACtB,IAAMC,EAAY,2CAClB,GAAI,CACF,IAAMC,EAAUN,GAAkB,MAAMI,CAAI,EACtCG,EAAMC,EAAK,QAAQF,EAAQ,GAAG,EAE/BG,GAAWF,CAAG,IACjBG,EAAO,MAAM,aAAaH,CAAG,6CAA0C,EACvE,QAAQ,KAAK,CAAC,GAGhB,IAAMI,EAAS,MAAMC,GAAgB,EACrC,MAAMC,GAAUF,EAAO,oBAAqBN,EAAWE,CAAG,CAC5D,MAAc,CAAC,CACjB,CAAC,EAEH,eAAsBK,IAAkB,CAClC,OAAOb,GAAgB,WACzBA,EAAcA,EAAY,KAAK,GAGjC,IAAMe,EAAM,MAAMC,GAAQ,CACxB,QAASC,EACT,KAAM,OACN,KAAM,OACN,QAAS,8BACT,QAAS,SACX,CAAC,EAED,OAAI,OAAOF,EAAI,MAAS,WACtBf,EAAce,EAAI,KAAK,KAAK,GAKvB,CAAE,oBAFmBN,EAAK,QAAQT,CAAW,CAEvB,CAC/B,CAEA,eAAsBc,GACpBI,EACAZ,EACAE,EACA,CACA,IAAMW,EAAaC,GAAiBC,GAAM,KAAKD,CAAI,EAE7CE,EAAOb,EAAK,QAAQS,CAAmB,EACvCK,EAAUd,EAAK,SAASa,CAAI,EACbE,GAAG,WAAWF,CAAI,GAGrC,QAAQ,KAAK,CAAC,EAGhBX,EAAO,KACL,iBAAiBQ,EAAUI,CAAO,CAAC,eAAeJ,EAAUG,CAAI,CAAC,KACnE,EAEAX,EAAO,KAAK,EAAE,EAEd,IAAMc,EAAiB,MAAMC,EAAkBlB,CAAG,EAElD,MAAMmB,GAAU,CACd,QAAST,EACT,QAASZ,EACT,eAAAmB,CACF,CAAC,CACH,CVxFA,IAAMG,EAAU,IAAIC,GACpB,eAAeC,IAAO,CACpBF,EACG,KAAK,SAAS,EACd,YAAY,yBAAyB,EACrC,QAAQ,QAAS,gBAAiB,4BAA4B,EAEjEA,EAAQ,WAAWG,EAAK,EAAE,WAAWC,CAAI,EACzCJ,EAAQ,MAAM,CAChB,CAEAE,GAAK","names":["Command","Command","existsSync","fs","ora","path","chalk","execa","template","prompts","z","DEFAULT_COMPONENTS","DEFAULT_UTILS","DEFAULT_TAILWIND_CSS","DEFAULT_TAILWIND_CONFIG","DEFAULT_GRAPHQL","PROJECT_DEPENDENCIES","UTILS","TAILWIND_CONFIG_TS","cosmiconfig","path","loadConfig","z","createMatchPath","resolveImport","importPath","config","explorer","cosmiconfig","rawConfigSchema","z","configSchema","getConfig","cwd","config","getRawConfig","resolveConfigPaths","tsConfig","loadConfig","path","resolveImport","configResult","detect","getPackageManager","targetDir","packageManager","chalk","logger","args","handleError","error","logger","fs","isWriteable","directory","onPromptState","state","initOptionsSchema","z","init","Command","opts","options","cwd","path","existsSync","logger","existingConfig","getConfig","promptConfig","promptForConfig","runInit","err","handleError","defaultConfig","highlight","text","chalk","prompts","onPromptState","DEFAULT_GRAPHQL","DEFAULT_TAILWIND_CONFIG","DEFAULT_TAILWIND_CSS","DEFAULT_COMPONENTS","DEFAULT_UTILS","config","rawConfigSchema","resolvedProjectPath","createGsellerJson","spinner","ora","isWriteable","targetPath","fs","resolveConfigPaths","key","resolvedPath","dirname","tailwindConfigTemplate","TAILWIND_CONFIG_TS","spinnerWriteTailwindConfig","template","spinnerWriteUtils","UTILS","dependenciesSpinner","packageManager","getPackageManager","deps","PROJECT_DEPENDENCIES","dep","execa","chalk","Command","fs","existsSync","path","prompts","z","retry","chalk","fs","path","createWriteStream","fs","got","tmpdir","join","Stream","tar","promisify","pipeline","downloadTar","url","tempFile","downloadAndExtractRepo","root","username","name","branch","filePath","p","downloadAndExtractExample","got","isUrlOk","url","e","getRepoInfo","examplePath","username","name","t","_branch","file","filePath","infoResponse","info","branch","hasRepo","contentsUrl","packagePath","existsInRepo","nameOrUrl","chalk","spawn","ora","install","packageManager","isOnline","args","resolve","reject","code","fs","makeDir","root","options","DownloadError","createApp","appPath","example","packageManager","repoInfo","repoUrl","error","chalk","getRepoInfo","hasRepo","existsInRepo","root","path","isWriteable","appName","makeDir","logger","packageJsonPath","hasPackageJson","repoInfo2","retry","downloadAndExtractRepo","downloadAndExtractExample","reason","isErrorLike","err","fs","install","projectPath","initOptionsSchema","z","start","Command","opts","urlGitHub","options","cwd","path","existsSync","logger","prompt","promptForConfig","initStart","res","prompts","onPromptState","resolvedProjectPath","highlight","text","chalk","root","appName","fs","packageManager","getPackageManager","createApp","program","Command","main","start","init"]}